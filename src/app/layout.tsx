import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import Link from "next/link";
import { headers } from "next/headers";
import Header from "@/components/user/layout/Header";
import Footer from "@/components/user/layout/Footer";
import "react-toastify/dist/ReactToastify.css";
import { ToastContainer } from "react-toastify";
import { NextAuthProvider } from "@/components/NextAuthProvider";
import { getServerSession } from "next-auth";
import { options } from "./api/auth/[...nextauth]/options";
import { userRole } from "./api/auth/[...nextauth]/roles.enum";
import { redirect } from "next/navigation";
import ReduxProvider from "@/components/redux/Provider";
const inter = Inter({ subsets: ["latin"] });

const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headersList = headers();
  const pathname = headersList.get("x-pathname") || "";
  if (pathname.startsWith("/manager"))
    return (
      <html lang="en">
        <body suppressHydrationWarning={true}>
          <NextAuthProvider>
            <ToastContainer autoClose={800} />
            {children}
          </NextAuthProvider>
        </body>
      </html>
    );
  const session = await getServerSession(options);
  if (
    pathname != "/auth/logout" &&
    session != null &&
    (Number(session?.user?.access_token.exp) < new Date().getTime() ||
      session.user?.role != userRole)
  )
    return redirect("/auth/logout");
  else if (session != null && pathname == "/auth/login") return redirect("/");

  return (
    <html lang="en">
      <body className={inter.className}>
        <ReduxProvider>
          <NextAuthProvider>
            <ToastContainer autoClose={800} />
            <Header userName={session?.user?.user_info.user_name} />
            <div className="max-w-screen-xl mx-auto">{children}</div>
            <Footer />
          </NextAuthProvider>
        </ReduxProvider>
      </body>
    </html>
  );
}
